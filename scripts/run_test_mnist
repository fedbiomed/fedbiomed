#!/bin/bash
#
#
# Continuous integration payload script
# for fedbiomed-v3-linux job on ci.inria.fr/fedbiomed
#
# Used by ci.inria.fr to run a local (developement) validation test
# Called from CI_build
#

# timeout in seconds for aborting the test
TEST_TIMEOUT=900

basedir=$(cd $(dirname $0)/.. || exit ; pwd)
cd $basedir || exit

# arguments : path to MNIST dataset
path_mnist=$1
if [ ! -d "$path_mnist" ]
then
    echo "ERROR: MNIST dataset path $path_mnist is not a valid directory"
    exit -1
fi


# conda initialization
c=$(which conda)
if [ -z "$c" ]
then
    echo "Please install conda first !!!"
    exit -1
fi
eval "$(conda shell.bash hook)"

mpid= # PIDs monitored (used only as an intermediate variable here)
kpids= # PIDs to be killed

# launch network
echo "INFO: launching fedbiomed network"
# this is done by `fedbiomed_run network`
#source $basedir/scripts/fedbiomed_environment network
$basedir/scripts/fedbiomed_run network
conda deactivate
sleep 3

# populate node
echo "INFO: populating fedbiomed node"
source $basedir/scripts/fedbiomed_environment node
$basedir/scripts/fedbiomed_run node --add-mnist $path_mnist
$basedir/scripts/fedbiomed_run node config config-n1.ini --add-mnist $path_mnist

# Launch node 1
echo "INFO: launching fedbiomed node"
$basedir/scripts/fedbiomed_run node start &
apids=$!

# Launch node 2
$basedir/scripts/fedbiomed_run node config config-n1.ini start &
apids="$apids $!"

conda deactivate
sleep 3
apids=$(pstree -p $apids | grep -o '([0-9]\+)' | grep -o '[0-9]\+' | tr '\n' ' ')
echo "INFO : apids=$apids"
kpids="${kpids:+$kpids }$apids"
mpid="($mpid|$!)"

# launch test and wait for completion
echo "INFO: launching fedbiomed researcher"
source $basedir/scripts/fedbiomed_environment researcher
EXEC_TEST=$basedir/notebooks/101_getting-started.py
if [ -x "$EXEC_TEST" ]
then
    timeout --preserve-status --signal=HUP --kill-after=10 $TEST_TIMEOUT $EXEC_TEST
else
    echo "INFO: no script $EXEC_TEST in this version, skipping"
fi
status=$?
conda deactivate

##clean running processes and datasets
echo "INFO: killing kpids=$kpids"
kill -9 $kpids
( cd $basedir/envs/development/docker ; docker-compose down )
source $basedir/scripts/fedbiomed_environment node
$basedir/scripts/fedbiomed_run node --delete-mnist

conda deactivate

## exit code
if [ $status -eq 0 ]
then
    echo "Success"
    exit 0
else
    echo "Failure with status $status"
    exit 1
fi
