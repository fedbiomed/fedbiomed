#!/bin/bash
#
# run a specific component of fedbiomed
#

# detect how the file is run
([[ -n $ZSH_EVAL_CONTEXT && $ZSH_EVAL_CONTEXT =~ :file$ ]] ||
 [[ -n $KSH_VERSION && $(cd "$(dirname -- "$0")" &&
    printf '%s' "${PWD%/}/")$(basename -- "$0") != "${.sh.file}" ]] ||
 [[ -n $BASH_VERSION ]] && (return 0 2>/dev/null)) && sourced=1 || sourced=0

[[ "${sourced}" == "1" ]] && echo "This file MUST NOT be sourced" && return

#Activate conda with any of the next commands
#source ~/miniconda3/bin/activate
#source ~/.bashrc

eval "$(conda shell.bash hook)"

#
# find the directory containing all sources
#
#
basedir=$(cd $(dirname $0)/.. || exit ; pwd)
cd $basedir || exit

#
case $1 in

    network)
        source ./scripts/fedbiomed_environment network
        cd ./envs/development/docker
        #
        CONTAINER_UID=$(id -u) CONTAINER_GID=$(id -g) \
          CONTAINER_USER=$(id -un) CONTAINER_GROUP=$(id -gn) \
          docker-compose build restful mqtt
        docker-compose up -d restful mqtt
        ;;

    node)

        while true ; do
            case $2 in
                # handle optional parameters : config file, network ip, model approve and allow default models
                config)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing config file name"
                        exit 1
                    fi
                    export CONFIG_FILE=$3
                    shift
                    shift
                ;;
                ip_address)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing network ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                ;;
                enable-model-approval|--enable-model-approval|-emp)
                    export ENABLE_MODEL_APPROVAL=True
                    shift
                ;;
                disable-model-approval|--disable-model-approval|-dmp)
                    export ENABLE_MODEL_APPROVAL=False
                    shift
                ;;
                allow-default-models|--allow-default-models|-adm )
                    export ALLOW_DEFAULT_MODELS=True
                    shift
                ;;
                disable-default-models|--disable-default-models|-ddm )
                    export ALLOW_DEFAULT_MODELS=False
                    shift
                ;;

                *)
                    break
                ;;
            esac
        done

        # pass remaining params to launched script
        if [ $# -ge 2 ]
        then
            export PARAMS=${@:3:$#-2}
        else
            export PARAMS=
        fi

        # TODO : better test with python module loading attempt and try/except
        if [ -f "./fedbiomed/node/cli.py" ]
        then
            case $2 in

                list|--list|-l)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --list $PARAMS
                    ;;

                del|delete|--del|--delete|-d)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete $PARAMS
                    ;;

                del-all|delete-all|--del-all|--delete-all|-da)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete-all $PARAMS
                    ;;

                delete-mnist|--delete-mnist|-dm)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete-mnist $PARAMS
                    ;;

                add|--add|-a)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --add $PARAMS
                    ;;

                add-mnist|--add-mnist|-am)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --add-mnist $PARAMS
                    ;;

                add-dataset-from-file|--add-dataset-from-file|-adff)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli -adff $PARAMS
                    ;;

                register-model|--register-model|-rml)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --register-model $PARAMS
                    ;;

                update-model|--update-model|-uml)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --update-model $PARAMS
                    ;;

                list-models|--list-models|-lms)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --list-models $PARAMS
                    ;;

                delete-model|--delete-model|-dml)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete-model $PARAMS
                    ;;

                start|--start|-s)
                    #export MQTT_BROKER=localhost
                    #export MQTT_BROKER_PORT=1883
                    #export UPLOADS_URL='http://localhost:8844/upload/'
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --start $PARAMS
                    ;;
                *)
                    echo "please run node with add or start option (full help with -h)"
                    exit -1
                    ;;
            esac
        else
            echo "INFO: no fedbiomed.node.cli yet in this version, skipping command"
        fi
        ;;

    researcher)
        #export MQTT_BROKER=localhost
        #export MQTT_BROKER_PORT=1883
        #export UPLOADS_URL='http://localhost:8844/upload/'

        while true ; do
            case $2 in
                ip_address)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing network ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                ;;
                *)
                    break
                ;;
            esac
        done

        source ./scripts/fedbiomed_environment researcher $IP_ADDRESS
        cd notebooks

        # Windows WSL and others cannot handle using redirect file for securing notebook launch
        # https://jupyter-notebook.readthedocs.io/en/stable/config.html (section NotebookApp.use_redirect_file)
        NB_OPTS=
        if [ -n "$(uname -r | egrep -i 'microsoft|wsl')" ]
        # case if windows WSL is used
        then
            NB_OPTS='--NotebookApp.use_redirect_file=false'
        fi

        jupyter notebook $NB_OPTS
        ;;

    help|-h|--help)
        cat <<EOF
usage: fedbiomed_run network
       fedbiomed_run researcher [ip_address IP_ADDRESS]
       fedbiomed_run node [config CONFIG_NAME | ip_address IP_ADDRESS | enable-model-approval | disable-model-approval | allow-default-models | disable-default-models ]
                         (start | add | list | delete | add-mnist PATH_TO_DATASET | delete-mnist | list-models | register-model | delete-model | update-model) PARAMS


Runs the fedbiomed components after properly initializing the environments.
The component name is mandatory.

network   : run the necessary docker containers (in development mode)

researcher: launch a researcher notebook

            an optional IP_ADDRESS (eg 10.1.2.3 or host.foo) can be used to join the network
                component instead of the default localhost

node      : a second argument is mandatory
            - start : launch a new node
            - add/list/delete deal with dataset
            - add-mnist PATH_TO_DATASET non-interactively adds a mnist dataset
            - add-dataset-from-file PATH_TO_JSON_FILE non-interactively adds a dataset
                described in a json file with the following format
                
                {
                    "path": "/path/to/dataset",
                    "data_type": "csv|default|images",
                    "description": "arbitrary descrription string",
                    "tags": "comma,separated,list,without,blanks",
                    "name": "arbitrary name string"
                }

            - delete-mnist non-interactively un-registers a mnist dataset
            - delete-all non interactively un-registers all node datasets

            - register-model  | --register-model    : To register new model files
            - update-model    | --update-model      : To update registered models

            an optional config file CONFIG_NAME can be given it will be used instead of the default one (config.ini)

            an optional IP_ADDRESS can be used to join the network component instead of
                the default localhost

            optional additional PARAMS are passed to fedbiomed

            Option that should be used with start or add command to manage node modes.

            - enable-model-approval     | --enable-model-approval   : to enable model approval mode
            - allow-default-models      | --allow-default-models    : to allow default model for model approval mode
            - disable-model-approval    | --disable-model-approval  : to disable model approval mode
            - disable-default-models    | --disable-default-models  : to disable default models for model approval mode

EOF
        ;;

    *)
        echo "Please specify the component you want to run between: network, node, researcher"
        exit -1
        ;;
esac
