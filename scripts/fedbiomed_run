#!/bin/bash
#
# run a specific component of fedbiomed
#

# detect how the file is run
([[ -n $ZSH_EVAL_CONTEXT && $ZSH_EVAL_CONTEXT =~ :file$ ]] ||
 [[ -n $KSH_VERSION && $(cd "$(dirname -- "$0")" &&
    printf '%s' "${PWD%/}/")$(basename -- "$0") != "${.sh.file}" ]] ||
 [[ -n $BASH_VERSION ]] && (return 0 2>/dev/null)) && sourced=1 || sourced=0

[[ "${sourced}" == "1" ]] && echo "This file MUST NOT be sourced" && return

#Activate conda with any of the next commands
#source ~/miniconda3/bin/activate
#source ~/.bashrc

eval "$(conda shell.bash hook)"

#
# find the directory containing all sources
#
#
basedir=$(cd $(dirname $0)/.. || exit ; pwd)
cd $basedir || exit

#
case $1 in

    network)
        source ./scripts/fedbiomed_environment network
        cd ./envs/development/network
        ./deploy.sh --local
        ;;

    node)

        while true ; do
            case $2 in
                # handle optional parameters : config file, network ip
                config)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing config file name"
                        exit 1
                    fi
                    export CONFIG_FILE=$3
                    shift
                    shift
                ;;
                ip_address)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing network ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                ;;
                *)
                    break
                ;;
            esac
        done
        
        # pass remaining params to launched script
        if [ $# -ge 2 ]
        then
            export PARAMS=${@:3:$#-2}
        else
            export PARAMS=
        fi

        # TODO : better test with python module loading attempt and try/except
        if [ -f "./fedbiomed/node/cli.py" ]
        then
            case $2 in

                list|--list|-l)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --list $PARAMS
                    ;;

                del|delete|--del|--delete|-d)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete $PARAMS
                    ;;

                delete-mnist|--delete-mnist|-dm)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --delete-mnist $PARAMS
                    ;;

                add|--add|-a)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --add $PARAMS
                    ;;

                add-mnist|--add-mnist|-am)
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --add-mnist $PARAMS
                    ;;

                start|--start|-s)
                    #export MQTT_BROKER=localhost
                    #export MQTT_BROKER_PORT=1883
                    #export UPLOADS_URL='http://localhost:8844/upload/'
                    source ./scripts/fedbiomed_environment node $IP_ADDRESS
                    python -m fedbiomed.node.cli --start $PARAMS
                    ;;
                *)
                    echo "please run node with add or start option (full help with -h)"
                    exit -1
                    ;;
            esac
        else
            echo "INFO: no fedbiomed.node.cli yet in this version, skipping command"
        fi
        ;;

    researcher)
        #export MQTT_BROKER=localhost
        #export MQTT_BROKER_PORT=1883
        #export UPLOADS_URL='http://localhost:8844/upload/'

        while true ; do
            case $2 in
                ip_address)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing network ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                ;;
                *)
                    break
                ;;
            esac
        done

        source ./scripts/fedbiomed_environment researcher $IP_ADDRESS
        cd notebooks
        jupyter notebook
        ;;

    help|-h|--help)
        cat <<EOF
usage: fedbiomed_run network
       fedbiomed_run researcher [ip_address IP_ADDRESS]
       fedbiomed_run node [config CONFIG_NAME | ip_address IP_ADDRESS]
                         (start | add | list | delete | add-mnist | delete-mnist) PARAMS


Runs the fedbiomed components after properly initializing the environments.
The component name is mandatory.

network   : run the necessary docker containers (in development mode)

researcher: launch a researcher notebook

            an optional IP_ADDRESS (eg 10.1.2.3 or host.foo) can be used to join the network
                component instead of the default localhost

node      : a second arguement is mandatory
            - start : launch a new node
            - add/list/delete deals with dataset
            - add-mnist PATH_TO_DATASET directly adds a mnist dataset
            - delete-mnist directly removes a mnist dataset

            an optional config file CONFIG_NAME can be given it will be used instead of the default one (config.ini)

            an optional IP_ADDRESS can be used to join the network component instead of
                the default localhost

EOF
        ;;

    *)
        echo "Please specify the component you want to run between: network, node, researcher"
        exit -1
        ;;
esac
