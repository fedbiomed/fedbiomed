#!/bin/bash
#
# run a specific component of fedbiomed
#

# detect how the file is run
([[ -n $ZSH_EVAL_CONTEXT && $ZSH_EVAL_CONTEXT =~ :file$ ]] ||
 [[ -n $KSH_VERSION && $(cd "$(dirname -- "$0")" &&
    printf '%s' "${PWD%/}/")$(basename -- "$0") != "${.sh.file}" ]] ||
 [[ -n $BASH_VERSION ]] && (return 0 2>/dev/null)) && sourced=1 || sourced=0

[[ "${sourced}" == "1" ]] && echo "This file MUST NOT be sourced" && return

#Activate conda with any of the next commands
#source ~/miniconda3/bin/activate
#source ~/.bashrc

eval "$(conda shell.bash hook)"

#
# find the directory containing all sources
#
#
basedir=$(cd $(dirname $0)/.. || exit ; pwd)
cd $basedir || exit


function usage_body() {

    case $1 in
        node)
            cat <<EOF

node      : a second argument is mandatory
            - start : launch a new node
            - add/list/delete deal with dataset
            - add-mnist PATH_TO_DATASET non-interactively adds a mnist dataset
            - add-dataset-from-file PATH_TO_JSON_FILE non-interactively adds a dataset
                described in a json file with the following format

                {
                    "path": "/path/to/dataset",
                    "data_type": "csv|default|images",
                    "description": "arbitrary description string",
                    "tags": "comma,separated,list,without,blanks",
                    "name": "arbitrary name string"
                }

            - delete-mnist non-interactively un-registers a mnist dataset
            - delete-all non interactively un-registers all node datasets

            - register-training-plan  | --register-training-plan  | -rtp    : Register and approve a training plan from a local file.
            - update-training-plan    | --update-training-plan    | -utp    : Update training plan file (for a training plan registered from a local file)
            - delete-training-plan    | --delete-training-plan    | -dml    : Delete a training plan from database (not for default training plans)

            - list-training-plans     | --list-training-plans     | -ltps   : List all training plans (requested, default or registered)
            - view-training-plan      | --view-training-plan      | -vtp    : View a training plan source code (requested, default or registered)
            - approve-training-plan   | --approve-training-plan   | -atp    : Approve a training plan (requested, default or registered)
            - reject-training-plan    | --reject-training-plan    | -rjtp   : Reject a training plan (requested, default or registered)

            Positional Arguments:

            - certificate   : Option for certificate management. Please see details 'fedbiomed_run node certificate -h'
            - configuration   : Option for configuration management. Please see details 'fedbiomed_run node configuration -h'

            Optional Arguments:

            an optional config file CONFIG_NAME can be given it will be used instead of the default one (config.ini)

            an optional IP_ADDRESS can be used to join the researcher component instead of
                the default localhost

            optional additional PARAMS are passed to fedbiomed

            Option that should be used with start or add command to manage node modes.

            - enable-training-plan-approval     | --enable-training-plan-approval   : to enable training plan approval mode
            - allow-default-training-plans      | --allow-default-training-plans    : to allow default training plan for training plan approval mode
            - disable-training-plan-approval    | --disable-training-plan-approval  : to disable training plan approval mode
            - disable-default-training-plans    | --disable-default-training-plans  : to disable default training plans for training plan approval mode
EOF
        ;;

        researcher)
            cat <<EOF

researcher: launch a researcher notebook

            Second argument mandatory:
            - start       : Starts Fed-BioMed researcher component by launch a Jupyter notebook with activated
                            conda environment.
            - certificate : Option for certificate management.
                            Please see details 'fedbiomed_run researcher certificate -h'
            - configuration : Option for configuration management.
                            Please see details 'fedbiomed_run researcher configuration -h'

            an optional IP_ADDRESS (eg 10.1.2.3 or host.foo) can be used to join the researcher
                component instead of the default localhost
EOF
        ;;

        gui)
            cat <<EOF

gui     : Fed-BioMed Node GUI options. Please run 'fedbiomed_run node gui -h' for details.
EOF
        ;;

        other)
            cat <<EOF

certificate-dev-setup : prepares development environment by registering certificates of each component created
            in a single clone of Fed-BioMed. This is only for development purposes and requires
            fedbiomed-researcher conda environment installed for this option.
EOF
        ;;
    esac
}

function usage() {

    case $1 in
        node)
            cat <<EOF
usage: fedbiomed_run node [config CONFIG_NAME | ip_address IP_ADDRESS | enable-training-plan-approval | disable-training-plan-approval | allow-default-training-plans | disable-default-training-plans ]
                         (start | add | list | delete | add-mnist PATH_TO_DATASET | delete-mnist | list-training-plans | view-training-plan | register-training-plan | delete-training-plan | update-training-plan) PARAMS


Runs the fedbiomed node component after properly initializing the environments.

EOF
            usage_body node
        ;;

        researcher)
            cat <<EOF
usage: fedbiomed_run researcher [ip_address IP_ADDRESS]

Runs the fedbiomed researcher component.
EOF
            usage_body researcher
        ;;

        gui)
            cat <<EOF
usage: febiomed_run gui [data-folder DATAFOLDER | config CONFIG_NAME | cert CERTIFICATE_NAME | key PRIVATE_KEY_NAME | host IP_ADDRESS | port PORT | --recreate] (start)

Runs the fedbiomed gui
EOF
            usage_body gui
        ;;

        *|'')
            cat <<EOF
usage: fedbiomed_run researcher [ip_address IP_ADDRESS] start
       fedbiomed_run node [config CONFIG_NAME | ip_address IP_ADDRESS | enable-training-plan-approval | disable-training-plan-approval | allow-default-training-plans | disable-default-training-plans ]
                         (start | add | list | delete | add-mnist PATH_TO_DATASET | delete-mnist | list-training-plans | view-training-plan | register-training-plan | delete-training-plan | update-training-plan) PARAMS
       febiomed_run gui [data-folder DATAFOLDER | config CONFIG_NAME | cert CERTIFICATE_NAME | key PRIVATE_KEY_NAME | host IP_ADDRESS | port PORT | --recreate]
                         (start)
       fedbiomed_run certificate-dev-setup

Runs the fedbiomed components after properly initializing the environments.
The component name is mandatory.
EOF
            usage_body researcher
            usage_body node
            usage_body gui
            usage_body other
    ;;
    esac

    exit 0
}

# Colors
RED='\033[0;31m' #red
YLW='\033[1;33m' #yellow
NC='\033[0m' #no color
BLD='\033[1m'

# Error function
function error(){
      echo -e "${RED}ERROR: ${NC}"
      echo -e "${BOLD}$1${NC}"
      exit 1
}


# Function forward given command to python cli for specified component
function forward_command_to_python_cli(){

    COMPONENT=$1
    EXTRA_PARAMS=$2

    if [ -z "$EXTRA_PARAMS" ]; then
      error "Please provide a command. See fedbiomed_run $COMPONENT -h"
    fi

    # dont write error message in this case, cli already does it
    python -m fedbiomed."$COMPONENT".cli $EXTRA_PARAMS

}

function deprecation_warning(){
    echo -e "\n${BLD}${YLW}DEPRECATION WARNING!:${NC}\n$1" | tr -s ' '
}


#
# argument decoding
#
case $1 in

    gui)
        deprecation_warning "fedbiomed_run gui is deprecated and will be removed in\
         the future releases please use ${BLD}fedbiomed_run node gui${NC} "

        # Get params starting from second
        EXTRA_PARAMS=${@:2}
        eval "$basedir/scripts/fedbiomed_gui $EXTRA_PARAMS"
      ;;

    node)

        CONFIG_FILE=config_node.ini
        while true ; do
            case $2 in
                # handle optional parameters : config file, researcher ip, training plan approval and allow default training plans
                config)
                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing config file name"
                        exit 1
                    fi
                    deprecation_warning "${BLD}config${NC} option is no longer supported please use '--config' instead."
                    export CONFIG_FILE=$3
                    CONFIG_FILE=$3
                    shift
                    shift
                ;;
                ip_address)
                    deprecation_warning "The option ${BLD}ip_address${NC} is deprecated and will be removed in future releases\
                        please use/set environment variable ${BLD}'export FBM_SERVER_HOST'${NC} or \
                        ${BLD}'export FBM_SERVER_PORT'${NC}\
                        before executing command.\n\
                        ${BLD}WARNING:${NC} 'export FBM_SERVER_PORT' is only valid when generating a new \
                        configuration file (will not be interpreted otherwise)."

                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing researcher ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                ;;
                enable-training-plan-approval|--enable-training-plan-approval|-tmp)
                    deprecation_warning "The option ${BLD}enable-training-plan-approval${NC} is deprecated\
                        and will be removed in future releases. Please use/set environment variable\
                        ${BLD}'FBM_SECURITY_TRAINING_PLAN_APPROVAL=True'${NC} or update configuration file to\
                        enable training plan approval."

                    export FBM_SECURITY_TRAINING_PLAN_APPROVAL=True
                    shift
                ;;
                disable-training-plan-approval|--disable-training-plans-approval|-dtpa)
                    deprecation_warning "The option ${BLD}disable-training-plan-approval${NC} is deprecated\
                        and will be removed in the future releases. Please use/set environment variable\
                        ${BLD}'FBM_SECURITY_TRAINING_PLAN_APPROVAL=False'${NC} or update configuration file to\
                        disable training plan approval."

                    export FBM_SECURITY_TRAINING_PLAN_APPROVAL=False
                    shift
                ;;
                allow-default-training-plans|--allow-default-training-plans|-adtps )
                    deprecation_warning "The option ${BLD}allow-default-training-plans${NC} is deprecated\
                        and will be removed in future releases. Please use/set environment variable\
                        ${BLD}'FBM_SECURITY_ALLOW_DEFAULT_TRAINING_PLANS=True'${NC} or update the configuration file."

                    export FBM_ALLOW_DEFAULT_TRAINING_PLANS=True
                    shift
                ;;
                disable-default-training-plans|--disable-default-training-plans|-ddtps )
                    deprecation_warning "The option ${BLD}disable-default-training-plans${NC} is deprecated\
                        and will be removed in future releases. Please use/set environment variable\
                        ${BLD}'FBM_SECURITY_ALLOW_DEFAULT_TRAINING_PLANS=False'${NC} or update the configuration file."

                    export FBM_SECURITY_ALLOW_DEFAULT_TRAINING_PLANS=False
                    shift
                ;;
                *)
                    break
                ;;
            esac
        done

        # pass remaining params to launched script
        if [ $# -ge 2 ]
        then
            export PARAMS=${@:3:$#-2}
        else
            export PARAMS=
        fi

         # Activate node envirenment
        source "$basedir"/scripts/fedbiomed_environment node "$IP_ADDRESS"

        # Get params starting from second
        EXTRA_PARAMS=${@:2}

        case $2 in

            list|--list|-l)
                deprecation_warning "fedbiomed_run node list is deprecated. \
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset list${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset list
                exit 0
                ;;
            del|delete|--del|--delete|-d)
                deprecation_warning "fedbiomed_run node delete is deprecated. \
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset delete${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset delete
                exit 0
                ;;
            del-all|delete-all|--del-all|--delete-all|-da)
                deprecation_warning "fedbiomed_run node delete-all | del-all | --del-all is deprecated.\
                        This command will be removed in the future releases. \
                        Please ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset delete --all${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset delete --all
                exit 0
                ;;

            delete-mnist|--delete-mnist|-dm)
                deprecation_warning "fedbiomed_run node delete-mnist | --delete-mnist is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset delete --mnist${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset delete --mnist
                exit 0
                ;;
            add|--add|-a)
                deprecation_warning "fedbiomed_run node add | --add | -a is deprecated.\
                        This command will be removed in the future releases. \
                       Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset add${NC}"
                 $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset add
                exit 0
                ;;
            add-mnist|--add-mnist|-am)
                deprecation_warning "fedbiomed_run node add-mnist | -am is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset add --mnist [PATH_TO_MNIST]${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset add --mnist $PARAMS
                exit 0
                ;;

            add-dataset-from-file|--add-dataset-from-file|-adff)
                deprecation_warning "fedbiomed_run node add-dataset-from-file is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] dataset add --file [PATH_TO_FILE]${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" dataset add --file $PARAMS
                exit 0
                ;;

            register-training-plan|--register-training-plan|-rtp)
                deprecation_warning "fedbiomed_run node register-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan register${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan register
                exit 0
                ;;

            approve-training-plan|--approve-training-plan|-atp)
                deprecation_warning "fedbiomed_run node approve-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan approve${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan approve
                exit 0
                ;;

            reject-training-plan|--reject-training-plan|-rjtp)
                deprecation_warning "fedbiomed_run node reject-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan reject${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan reject
                exit 0
                ;;
            update-training-plan|--update-training-plan|-utp)
                deprecation_warning "fedbiomed_run node update-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan update${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan update
                exit 0
                ;;

            list-training-plans|--list-training-plans|-ltps)
                deprecation_warning "fedbiomed_run node list-training-plans is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan list${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan list
                exit 0
                ;;
            delete-training-plan|--delete-training-plan|-dtp)
                deprecation_warning "fedbiomed_run node delete-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                        Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan delete${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan delete
                exit 0
                ;;

            view-training-plan|--view-training-plan|-vtp)
                 deprecation_warning "fedbiomed_run node view-training-plan is deprecated.\
                        This command will be removed in the future releases. \
                       Please use ${BLD}fedbiomed_run node --config [CONFIG_FILE] training-plan view${NC}"
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" training-plan view
                exit 0
                ;;

            start|--start|-s)
                PARAMS=${@:3:$#-2}
                $basedir/scripts/fedbiomed node --config "$CONFIG_FILE" start $PARAMS
                exit 0
                ;;
        esac

        if [ $# -ge 2 ]
        then
            export PARAMS=${@:3:$#-2}
        else
            export PARAMS=
        fi

        # All unkown arguments goes to node cli
        EXTRA_PARAMS=${@:2}
        $basedir/scripts/fedbiomed node $EXTRA_PARAMS

        ;;

    researcher)
        while true ; do
            case $2 in
                ip_address)
                    deprecation_warning "The option ${BLD}ip_address${NC} is deprecated and will be removed in future releases\
                        please use/set environment variable ${BLD}'export FBM_SERVER_HOST'${NC} or \
                        ${BLD}'export FBM_SERVER_PORT'${NC}\
                        before executing command.\
                        \n${BLD}WARNING:${NC} ${BLD}ip_address${NC} and ${BLD}'export FBM_SERVER_HOST'${NC} \
                        are only valid when generating a \
                        new researcher configuration because is is included in the generated certificate \
                        used as server CN (will not be overwritten afterwards)."

                    if [ $# -lt 3 ] ; then
                        echo "ERROR: missing researcher ip"
                        exit 1
                    fi
                    IP_ADDRESS=$3
                    shift
                    shift
                    ;;
                *)
                    break
                ;;
            esac
        done

        # pass remaining params to launched script
        if [ $# -ge 2 ]
        then
            export PARAMS=${@:3:$#-2}
        else
            export PARAMS=
        fi

        EXTRA_PARAMS=${@:2}

        # Execution -------------------------------------------------------------------------------------------------
        # Activate conda environment
         # Activate node envirenment
        source "$basedir"/scripts/fedbiomed_environment researcher "$IP_ADDRESS"

        case $2 in
            start)
                # Windows WSL and others cannot handle using redirect file for securing notebook launch
                # https://jupyter-notebook.readthedocs.io/en/stable/config.html (section NotebookApp.use_redirect_file)
                NB_OPTS=
                if [ -n "$(uname -r | grep -E -i 'microsoft|wsl')" ]
                # case if windows WSL is used
                then
                    NB_OPTS='--NotebookApp.use_redirect_file=false'
                fi
                PARAMS=${@:3:$#-2}
                cd $basedir/notebooks
                $basedir/scripts/fedbiomed researcher start $PARAMS
                exit 0
            ;;
            help|-h|--help)
                $basedir/scripts/fedbiomed researcher -h
                exit 0
            ;;
            *)
              $basedir/scripts/fedbiomed researcher $EXTRA_PARAMS
            ;;
        esac
        ;;

    help|-h|--help)
        source "$basedir"/scripts/fedbiomed_environment researcher
        $basedir/scripts/fedbiomed -h
        ;;

    *)
      # Hack to fix temporarly issue 929
      CONDA_ENVIRON=researcher
      if [ "$1" = 'environ-node' ] ; then
        CONDA_ENVIRON=node
        shift
      fi

      PARAMS=${@}
      source "$basedir"/scripts/fedbiomed_environment $CONDA_ENVIRON $IP_ADDRESS
      $basedir/scripts/fedbiomed $PARAMS
      ;;
esac
