version: "3.7"

#
# Minimal configuration for only running a node component from a saved image
#
# Minimal dockerfile permits minimal file tree
# because *all* files dependencies referenced in `docker-compose.yml`
# (eg: `./*/build_files`, `./*/run_mounts/config/config.env`)
# need to exist for *all* containers everytime we run a docker-compose command
# thus we would have to copy file trees for vpnserver, researcher, etc. when only
# running a node
x-node:
  &standard-node
  container_name: fedbiomed-vpn-node
  hostname: fedbiomed-vpn-node
  image: fedbiomed/vpn-node
  environment:
    # enable overloading build-time id with a run-time id
    - CONTAINER_UID
    - CONTAINER_GID
    - CONTAINER_USER
    - CONTAINER_GROUP
  cap_add:
    - net_admin
    - sys_module
  devices:
    - /dev/net/tun
  volumes:
    - ./node/run_mounts/config:/config # contains VPN configurations
    - ./node/run_mounts/data:/data # datasets can be added here
    - ./node/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
    - ./node/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
    - ./node/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans..

#
# optionally launch a second node instance on the same machine
x-node2:
  &standard-node2
  container_name: fedbiomed-vpn-node2
  hostname: fedbiomed-vpn-node2
  image: fedbiomed/vpn-node
  environment:
  # enable overloading build-time id with a run-time id
    - CONTAINER_UID
    - CONTAINER_GID
    - CONTAINER_USER
    - CONTAINER_GROUP
  cap_add:
    - net_admin
    - sys_module
  devices:
    - /dev/net/tun
  volumes:
    - ./node2/run_mounts/config:/config # contains VPN configurations
    - ./node2/run_mounts/data:/data # datasets can be added here
    - ./node2/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
    - ./node2/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
    - ./node2/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...

services:
  # not using gpu
  node:
    << : *standard-node
  # using gpu (need image with gpu support)
  node-gpu:
    << : *standard-node
    runtime: nvidia
  #
  # optionally launch a second node instance
  # not using gpu
  node2:
    << : *standard-node2
  # using gpu (need image with gpu support)
  node2-gpu:
    << : *standard-node2
    runtime: nvidia

  #
  # node gui component
  gui:
    container_name: fedbiomed-vpn-gui
    hostname: fedbiomed-vpn-gui
    image: fedbiomed/vpn-gui
    environment:
      # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    ports:
      - "${GUI_HOST:-127.0.0.1}:8484:8484"
    volumes:
      # caution: /data /etc /var directory must be shared with node
      - ./node/run_mounts/data:/data # datasets can be added here
      - ./node/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
      - ./node/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
      - ./node/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans..
  #
  # node gui component
  gui2:
    container_name: fedbiomed-vpn-gui2
    hostname: fedbiomed-vpn-gui2
    image: fedbiomed/vpn-gui
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    ports:
      - "${GUI_HOST:-127.0.0.1}:8485:8484" # flask server
    volumes:
      # caution: /data /etc /var directory must be shared with node
      - ./node2/run_mounts/data:/data # datasets can be added here
      - ./node2/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
      - ./node2/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
      - ./node2/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...

