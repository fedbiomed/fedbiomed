version: "3.7"

#
# node component template
x-node:
  &standard-node
  container_name: fedbiomed-vpn-node
  hostname: fedbiomed-vpn-node
  build:
    context: ../../..
    dockerfile: envs/vpn/docker/node/build_files/Dockerfile
    args:
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
  image: fedbiomed/vpn-node
  environment:
  # enable overloading build-time id with a run-time id
    - CONTAINER_UID
    - CONTAINER_GID
    - CONTAINER_USER
    - CONTAINER_GROUP
  cap_add:
    - net_admin
    - sys_module
  devices:
    - /dev/net/tun
  volumes:
    - ./node/run_mounts/config:/config # contains VPN configurations
    - ./node/run_mounts/data:/data # datasets can be added here
    - ./node/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
    - ./node/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
    - ./node/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...

#
# optionally launch a second node instance on the same machine
x-node2:
  &standard-node2
  container_name: fedbiomed-vpn-node2
  hostname: fedbiomed-vpn-node2
  build:
    context: ../../..
    dockerfile: envs/vpn/docker/node/build_files/Dockerfile
    args:
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
  image: fedbiomed/vpn-node
  environment:
  # enable overloading build-time id with a run-time id
    - CONTAINER_UID
    - CONTAINER_GID
    - CONTAINER_USER
    - CONTAINER_GROUP
  cap_add:
    - net_admin
    - sys_module
  devices:
    - /dev/net/tun
  volumes:
    - ./node2/run_mounts/config:/config # contains VPN configurations
    - ./node2/run_mounts/data:/data # datasets can be added here
    - ./node2/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
    - ./node2/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
    - ./node2/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...

services:
  #
  # intermediate step : image for building wireguard for base image
  # we usually dont want to build or launch this service (only used for building "base")
  builder:
    container_name: fedbiomed-vpn-builder
    hostname: fedbiomed-vpn-builder
    build:
      context: ./base/build_files
      target: builder
    image: fedbiomed/vpn-builder
    entrypoint: /bin/true
    # profiles will handle not-launched-by-default services when 
    # >=1.28 becomes common https://docs.docker.com/compose/profiles/
    # 
    # profiles:
    #  - debug # not started by `docker-compose up` except if `--profile debug`
  #
  # intermediate step : base image for building vpn and researcher containers
  # we usually dont want to launch this service (used for building other services)
  base:
    container_name: fedbiomed-vpn-base
    hostname: fedbiomed-vpn-base
    build:
      context: ./base/build_files
    image: fedbiomed/vpn-base
    entrypoint: /bin/true
    # profiles:
    #  - debug
  #
  # intermediate step : base image for building node container 
  # 2 options : without or without nvidia gpu support
  # we usually dont want to launch this service (used for building other services)
  basenode-no-gpu:
    container_name: fedbiomed-vpn-base-node-no-gpu
    hostname: fedbiomed-vpn-base-node-no-gpu
    build:
      context: ./base/build_files
    image: fedbiomed/vpn-basenode
    entrypoint: /bin/true
    # profiles:
    #  - debug 
  basenode:
    container_name: fedbiomed-vpn-base-node
    hostname: fedbiomed-vpn-base-node
    build:
      context: ./basegpu/build_files
    image: fedbiomed/vpn-basenode
    entrypoint: /bin/true
    # profiles:
    #  - debug
  #
  # vpn server component
  vpnserver:
    container_name: fedbiomed-vpn-vpnserver
    hostname: fedbiomed-vpn-vpnserver
    build:
      context: ./vpnserver/build_files
      args:
        - CONTAINER_UID # build and use other account than "root"
        - CONTAINER_GID # build and use other group than "root"
        - CONTAINER_USER # build and use other account than "root"
        - CONTAINER_GROUP # build and use other group than "root"
    image: fedbiomed/vpn-vpnserver
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    cap_add:
      - net_admin # needed to handle wireguard interface
      - sys_module # needed to remove wireguard kernel module
    devices:
      - /dev/net/tun # needed to handle wireguard interface
    volumes:
      - ./vpnserver/run_mounts/config:/config # contains VPN configurations
    ports:
      - 51820:51820/udp # wireguard server

  #
  # node component
  # not using gpu
  node:
    << : *standard-node
  # using gpu (need image with gpu support)
  node-gpu:
    << : *standard-node
    runtime: nvidia
    #
    ## alternate syntax from the `Compose` specification, needs both
    ## Docker Compose v1.28.0+ and a supported config (eg seems not to
    ## be working with CentOS)
    ##
    #deploy:
    #  resources:
    #    reservations:
    #      devices:
    #        - driver: nvidia
    #          #count: 1
    #          capabilities: [gpu]
  #
  # optionally launch a second node instance
  # not using gpu
  node2:
    << : *standard-node2
  # using gpu (need image with gpu support)
  node2-gpu:
    << : *standard-node2
    runtime: nvidia

  #
  # node gui component
  gui:
    container_name: fedbiomed-vpn-gui
    hostname: fedbiomed-vpn-gui
    build:
      context: ../../..
      dockerfile: envs/vpn/docker/gui/build_files/Dockerfile
      args:
        - CONTAINER_UID
        - CONTAINER_GID
        - CONTAINER_USER
        - CONTAINER_GROUP
    image: fedbiomed/vpn-gui
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    ports:
      - "${GUI_HOST:-127.0.0.1}:8484:8484" # flask server
    volumes:
      # caution: /data /etc /var directory must be shared with node
      - ./node/run_mounts/data:/data # datasets can be added here
      - ./node/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
      - ./node/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
      - ./node/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...
  #
  # node gui component
  gui2:
    container_name: fedbiomed-vpn-gui2
    hostname: fedbiomed-vpn-gui2
    build:
      context: ../../..
      dockerfile: envs/vpn/docker/gui/build_files/Dockerfile
      args:
        - CONTAINER_UID
        - CONTAINER_GID
        - CONTAINER_USER
        - CONTAINER_GROUP
    image: fedbiomed/vpn-gui
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    ports:
      - "${GUI_HOST:-127.0.0.1}:8485:8484" # flask server
    volumes:
      # caution: /data /etc /var directory must be shared with node
      - ./node2/run_mounts/data:/data # datasets can be added here
      - ./node2/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
      - ./node2/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
      - ./node2/run_mounts/envs/common:/fedbiomed/envs/common # contains fedbiomed default training plans...
  #
  # researcher component
  researcher:
    container_name: fedbiomed-vpn-researcher
    hostname: fedbiomed-vpn-researcher
    build:
      context: ../../..
      dockerfile: envs/vpn/docker/researcher/build_files/Dockerfile
      args:
        - CONTAINER_UID
        - CONTAINER_GID
        - CONTAINER_USER
        - CONTAINER_GROUP
    image: fedbiomed/vpn-researcher
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    ports:
      - "${RESEARCHER_HOST:-127.0.0.1}:8888:8888" # jupyter notebook
      - "${RESEARCHER_HOST:-127.0.0.1}:6006:6007" # tensorboard via socat proxy
    cap_add:
      - net_admin
      - sys_module
    devices:
      - /dev/net/tun
    volumes:
      - ./researcher/run_mounts/config:/config # contains VPN configurations
      - ./researcher/run_mounts/data:/data # results and persistent data can be saved here
      - ./researcher/run_mounts/etc:/fedbiomed/etc # contains fedbiomed config files
      - ./researcher/run_mounts/samples:/fedbiomed/notebooks/samples # contains researcher sample notebooks
      - ./researcher/run_mounts/runs:/fedbiomed/runs # contains fedbiomed tensorboard results
      - ./researcher/run_mounts/var:/fedbiomed/var # contains fedbiomed db, exp results ...
  #
  # mqtt server component
  mqtt:
    container_name: fedbiomed-vpn-mqtt
    hostname: fedbiomed-vpn-mqtt
    build:
      context: ./mqtt/build_files
      args:
        - CONTAINER_UID
        - CONTAINER_GID
        - CONTAINER_USER
        - CONTAINER_GROUP
    image: fedbiomed/vpn-mqtt
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
    # no open ports ! this would backdoor the vpnization
    #ports:
    #  - "1883:1883"
    #  - "9001:9001"
    cap_add:
      - net_admin
      - sys_module
    devices:
      - /dev/net/tun
    volumes:
      - ./mqtt/run_mounts/config:/config # contains VPN configurations
  #
  # resful http server component
  restful:
    container_name: fedbiomed-vpn-restful
    hostname: fedbiomed-vpn-restful
    build:
      context: ./restful/build_files
      args:
        - CONTAINER_UID
        - CONTAINER_GID
        - CONTAINER_USER
        - CONTAINER_GROUP
    image: fedbiomed/vpn-restful
    environment:
    # enable overloading build-time id with a run-time id
      - CONTAINER_UID
      - CONTAINER_GID
      - CONTAINER_USER
      - CONTAINER_GROUP
      - PRODUCTION=1
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=dummy@gitlab.inria.fr
      - DJANGO_SUPERUSER_PASSWORD=admin123
    # no open ports ! this would backdoor the vpnization
    #ports:
    #  - "8844:8000"
    cap_add:
      - net_admin
      - sys_module
    devices:
      - /dev/net/tun
    volumes:
      - ./restful/run_mounts/app:/app # django application
      - ./restful/run_mounts/config:/config # contains VPN configurations
