---

name: Fed-BioMed Build test
run-name: Fed-BioMed Build test
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
      - review_requested
      - ready_for_review
    branches:
      - master
      - develop

jobs:
  build-doc:
    name: Test documentation build
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3

      - name: Detect documentation changes
        uses: dorny/paths-filter@master
        id: filter
        with:
          filters: |
            docs:
              - 'fedbiomed/**'
              - 'scripts/docs/**'
              - 'docs/**'
              - 'envs/development/**'
              - 'envs/build/**'
              - 'mkdocs.yml'
              - 'README.md'

      - name: Setup python
        if: steps.filter.outputs.docs == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        if: steps.filter.outputs.docs == 'true'
        run: pip install -r envs/build/docs-requirements.txt

      - name: Build documentation
        if: steps.filter.outputs.docs == 'true'
        # Version number for testing purposes should
        # respect to standart which is vMajor.Minor.Patch
        run: |
          scripts/docs/fedbiomed_doc.sh --build-dir build-repo \
            --build-main --build-current-as v1.0.1

  unit-test:
    name: Unit Tests
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22-04
          - fedora38
          - macosx-m1
        python-version:
          - '3.10'

    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout to commit
        uses: actions/checkout@v3

      - name: Filter module related changes
        uses: dorny/paths-filter@master
        id: filter
        with:
          filters: |
            module:
              - 'fedbiomed/**'
              - 'scripts/**'
              - 'tests/**'
              - 'envs/development/conda/**'
              - 'envs/build/**'
              - 'modules/**'
              - '.github/**'
              - 'pyproject.toml'
              - 'poetry.lock'

      - name: Install Python using Pyenv
        uses: ./.github/actions/setup-pyenv
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        if: steps.filter.outputs.module == 'true'
        run: |
          pyenv global ${{ matrix.python-version }}
          tox -r

      - name: Upload coverage reports to Codecov
        if: steps.filter.outputs.module == 'true' && matrix.os != 'macosx-m1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: tests/coverage.xml
          flags: unittests-${{ matrix.os }}  # optional
          name: codecov-umbrella  # optional
          fail_ci_if_error: true  # optional (default = false)
          verbose: true  # optional (default = false)

      - name: Notify upload impossible on m1
        if: steps.filter.outputs.module == 'true' && matrix.os == 'macosx-m1'
        run: |
          echo "No codecov-action available for macos-m1"

  mnist-test:
    name: Test Basic MNIST
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22-04
          - fedora38
          - macosx-m1
        python-version:
          - '3.10'
    runs-on: ${{ matrix.os }}
    needs: unit-test
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout to commit
        uses: actions/checkout@v3

      - name: Filter module related changes
        uses: dorny/paths-filter@master
        id: filter
        with:
          filters: |
            module:
              - 'fedbiomed/**'
              - 'scripts/**'
              - 'envs/development/conda/**'
              - 'notebooks/**'
              - '.github/**'

      - name: Install Python using Pyenv
        uses: ./.github/actions/setup-pyenv
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        if: steps.filter.outputs.module == 'true'
        run: |
          pyenv global ${{ matrix.python-version }}
          FEDBIOMED_E2E_DATA_PATH=$HOME/Data/fedbiomed \
            tox -r -m e2e -- e2e_mnist_pytorch.py

